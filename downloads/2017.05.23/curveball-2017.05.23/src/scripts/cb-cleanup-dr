#!/usr/bin/env bash
#
# This material is based upon work supported by the Defense Advanced
# Research Projects Agency under Contract No. N66001-11-C-4017 and in
# part by a grant from the United States Department of State.
# The opinions, findings, and conclusions stated herein are those
# of the authors and do not necessarily reflect those of the United
# States Department of State.
#
# Copyright 2014-2016 - Raytheon BBN Technologies Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the License for the specific language governing
# permissions and limitations under the License.


# Clean up any state left behind by a crashed or rogue DR process:
#
# 1. Kill any click processes
#
# The state depends on the DR implementation, so this needs to be
# reviewed periodically to check for any changes to the state.
#
# NOTE: this requires bash instead of sh in order to handle IFS
# the way I want.  This may be due to ignorance of sh on my part.

SUDO="/usr/bin/sudo"
KILLALL="/usr/bin/killall"

# Kill all the click processes we can find.
# Start gently, but become more insistent.
#
kill_click() {

    for exe in click /usr/local/bin/click ; do
	for signal in SIGINT SIGTERM SIGKILL; do
	    "$SUDO" "$KILLALL" -q -e -"$signal" "$exe"
	done
    done
}

kill_click

# The exit status is not very meaningful
#
exit $?
